[{"title":"2021 东北省赛","date":"2021-10-16T17:30:05.000Z","url":"/2021/10/17/%E7%BB%84%E9%98%9F%E8%B5%9B%E8%AE%AD%E7%BB%83/2021-%E4%B8%9C%E5%8C%97%E7%9C%81%E8%B5%9B/","categories":[["组队赛训练","/categories/%E7%BB%84%E9%98%9F%E8%B5%9B%E8%AE%AD%E7%BB%83/"]],"content":"还没开始写 "},{"title":"2020 东北省赛","date":"2021-10-15T20:10:12.000Z","url":"/2021/10/16/%E7%BB%84%E9%98%9F%E8%B5%9B%E8%AE%AD%E7%BB%83/2020-%E4%B8%9C%E5%8C%97%E7%9C%81%E8%B5%9B/","categories":[["组队赛训练","/categories/%E7%BB%84%E9%98%9F%E8%B5%9B%E8%AE%AD%E7%BB%83/"]],"content":"To be continued A Micro Structure Thread// 未补 B Team 题意 A，B，C组各$n$个人，一个队伍要选$3$个学生$a,b,c$（每组一个），每个人有一个点权$v_i$，一个队伍的权值为 $f(a, b)+f(a, c)$。一共要选$m$队，问权值和最大为多少。数据范围 $m\\leq n\\leq 200, T\\leq 10$ f(i, j) = (v_i+v_j)*(v_i\\oplus v_j) \\% MOD Solution 转化为最小费用最大流模型，用最大流对应最多选m队的条件，将边权置为负值，即可将求最大权值转化为最小权值。 建边方法如下： 将源点$S$拆成两个点$S$和$S’$，建边$S\\rightarrow S’$，容量$m$，费用0 对每个$b_i$建边$S’\\rightarrow b_i$，容量1，费用0 对每个$(b_i, a_j)$，建边$b_i\\rightarrow a_j$，容量1，费用$f(b_i,a_j)$ 将每个$a_i$拆成两个点$a_i$和$a_i’$，建边$a_i\\rightarrow a_i’$，容量1，费用0，这一步是为了避免一个$a_i$被多个队伍复用 对每个$(a_i’,c_j)$，建边$a_i’\\rightarrow c_j$，容量1，费用$f(a_i’,c_j)$ 关于负边： 注意Dijkstra无法处理负边，应使用SPFA的费用流 本题中，答案边数是固定的，因此也可以将所有负边加上一个固定值变为正权边，然后用Dijkstra费用流 C Function 题意 用$f(x)$表示$x$的所有后缀类乘后对$x+1$取模的结果，如$f(1023)=(3\\times 23\\times 23\\times 1023)\\%1024$ 用$g(n,m)$表示对$n$做$m$次$n=f(n)$ 求$\\sum\\limits_{i=1}^m g(n, i)$，数据范围 $1\\leq n,m\\leq 10^9,T\\leq 20$ Solution 瞎几把手玩了几组数据，感觉 $n$ 实际做不了几次$n=f(n)$ 就会死循环 $n=f(n)$，跟榜直接冲了发暴力就过了 但是这个收敛的次数实在不会证 D Fall Guys// TODO E Liner vectors// TODO F Splendor// 未补 G Halli Galli// TODO H PepperLa’s String// TODO I PepperLa’s Cram School 题意 给一张 $N\\times N$ 的完全图，每条边权值相等，再给一个 $N\\times N$ 的矩阵 $a$，要求选取几条边，将其余边都删除后，使得对所有 $(i,j)$ ，最短路 $dis_{i,j}=a_{i,j}$ ，问最少选几条边，保证给出的矩阵 $a$ 合法。（即一定存在选边方案） 多组数据，数据范围 $N\\leq 10^3, \\sum N\\leq 5\\times 10^3$ Solution 由于所有边等长，矩阵 $a$ 又一定合法，因此对于 $a_{i,j}=min(a_{i,j})$ 的 $(i,j)$，一定有直连边，选择这些边即可 坑点是题目只说所有边等长，但没有说边权是多少，一开始默认边权为1，w a了不少发 J Color the blocks签到，懒得写了，略 K PeperLa’s Boast 题意 给一张 $N\\times M$ 的格点图，每次移动可以从 $(i,j)$ 移动到 $(i+1,j),(i,j+1),(i+1,j+1)$，要求从$(1,1)$出发走到$(n,m)$，每个点有权值 $a_{i,j}$，走到$(i,j)$可以获取$a_{i,j}$的能量，若$a_{i,j}\\leq 0$，表示本格子有毒，需要屏气通过，可以一次性花费 $U$ 的能量开启屏气状态，屏气状态持续$K$步，可以主动取消。 这里题意有点歧义，实际上屏气状态需要在进入毒气区前开启，并在离开毒气区后解除，即如果$K=1$，是无法通过任何毒气区的。 求走到$(n,m)$时，身上最多有多少能量 多组数据，数据范围 $N,M\\le 10^3, 1\\le K,U\\le 10^9,\\sum {N\\times M}\\le 7\\times 10^6$ Solution 考虑DP，$f_{i,j}$ 表示走到 $(i,j)$ 时最多有多少能量，两种转移： 不考虑屏气，则有如下转移式 f_{i,j}= \\begin{cases} f_{i,j-1} + a_{i,j}& a_{i,j-1}>0 \\\\ f_{i-1,j} + a_{i,j}& a_{i-1,j}>0 \\\\ f_{i-1,j-1} + a_{i,j}& a_{i-1,j-1}>0 \\\\ \\end{cases} 考虑屏气，则有如下转移式 f_{i,j}=max(f_{x,y})-U+a_{i,j} \\ \\ (i-k\\le x\\le i,j-k\\le y\\le j)第一种转移比较简单，主要讲第二种转移。 该转移相当于从 $(i,j)$ 的左上角矩阵中取一个最大值，由于转移是从左到右，从上到下进行的，可以对每一列维护一个单调队列，这样就可以在dp到第$i$行时，对每个 $j$ 维护 $max(f_{x,j})(i-k\\le x\\le i)$。 然后从这一行上的每个单调队列中取出最大值，再做一遍单调队列，就可以得到这个矩阵中的最大值了。 相当于先对每列求最大值，再从中求矩阵的最大值。 复杂度$O(N\\times M)$ L PeperLa’s Express不想写了啊啊啊啊啊 出题人题解 Hile_Meow题解"},{"title":"Final Fantasy 队伍训练记录","date":"2021-10-15T19:11:08.000Z","url":"/2021/10/16/%E7%BB%84%E9%98%9F%E8%B5%9B%E8%AE%AD%E7%BB%83/Final-Fantasy-%E9%98%9F%E4%BC%8D%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/","categories":[["组队赛训练","/categories/%E7%BB%84%E9%98%9F%E8%B5%9B%E8%AE%AD%E7%BB%83/"]],"content":" Name Rank Solved A B C D E F G H I J K L M 2020 东北省赛 26/685 10/12 - O O O O - O O O O O Ø 2021 东北省赛 46/1152 9/13 O O O O O - - O O - O - O O 在比赛中通过 Ø 赛后通过 ! 尝试了但是失败了 - 没有尝试 "},{"title":"警示，卡精度题的一些坑","date":"2021-10-15T18:41:12.000Z","url":"/2021/10/16/%E8%AD%A6%E7%A4%BA%EF%BC%8C%E5%8D%A1%E7%B2%BE%E5%BA%A6%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/","tags":[["坑","/tags/%E5%9D%91/"]],"categories":[["奇技淫巧","/categories/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"]],"content":"用 double 转 LL 的方法提高精度时，需要注意一些问题 浮点损失的原因 浮点位数超过double或者long double存储上限，这个比较常见，这里不作讨论。 浮点数是二进制表示的，但总有二进制无法完美表示的浮点数。虽然 IEEE754 怎么算的我已经忘了。这里主要讨论这个原因 double转long long面对精度要求较高的题目，一个常见的做法是把double转成long long来运算，比如scanf(&quot;%lf&quot;, &amp;x); ll a = x*10000 但是这样做是有问题的 input output 解决方法 换一个读入方式，比如字符串读入 使用d = round(x * 10000)来替代d = x * 10000，虽然二进制不能完美表示浮点数，但是它会做到尽可能接近，使用round基本不会出问题 ABC#191 D这个题把我卡的人都差点昏过去，原来我以前的double转long long写法一直都有问题"},{"title":"如何令hexo支持latex渲染","date":"2021-10-15T18:32:47.000Z","url":"/2021/10/16/%E5%A6%82%E4%BD%95%E5%8F%A6hexo%E6%94%AF%E6%8C%81latex%E6%B8%B2%E6%9F%93/","categories":[["教程","/categories/%E6%95%99%E7%A8%8B/"]],"content":" 感谢这位老哥整理的博客 简书：解决Hexo中MathJax部分渲染问题"},{"title":"NamomoCamp-线段树 部分题解","date":"2021-01-31T23:28:16.000Z","url":"/2021/02/01/namomo-camp-segmentTree%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/","tags":[["线段树","/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"]],"categories":[["杂题练习","/categories/%E6%9D%82%E9%A2%98%E7%BB%83%E4%B9%A0/"],["NamomoCamp","/categories/%E6%9D%82%E9%A2%98%E7%BB%83%E4%B9%A0/NamomoCamp/"]],"content":"NamomoCamp2020-div2-day5-线段树 部分题解 Subsequence Count (hdu 6155) Tag dp， 矩阵，线段树 Solution Code "},{"title":"NamomoCamp-dp 部分题解","date":"2021-01-31T20:39:03.000Z","url":"/2021/02/01/namomo-camp-dp%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/","tags":[["dp","/tags/dp/"]],"categories":[["杂题练习","/categories/%E6%9D%82%E9%A2%98%E7%BB%83%E4%B9%A0/"],["NamomoCamp","/categories/%E6%9D%82%E9%A2%98%E7%BB%83%E4%B9%A0/NamomoCamp/"]],"content":"NamomoCamp2020-div2-day1-dp 部分题解 New Year and Original Order (Good Bye 2017 G) Tag 数位dp Solution 用$f[d][i]$表示数字$d$在第$i$位上出现的次数，假设我们已知所有$f[d][i]$，则有 ans=\\sum_{d=0}^{9}\\sum_{i=1}^{N}(f[d][i]\\times10^{i-1}\\times d)可惜的是$f[d][i]$未知，直接求$f[d][i]$也很难求 考虑下性质：所有数字升序排序，转化一下求$f[d][i]$的思路，用$g[d][i]$表示$\\ge d$的数字出现$\\ge i$次的次数，那么有$f[d][i]=g[d][i]-g[d+1][i]$ $g[d][i]$依旧不好直接求，但可以先求$h[d][i]$：$\\ge d$的数字出现恰好$i$次的次数，$g[d][i]=\\sum_{j=i}^{n}h[d][j]$ $h$就可以直接求了，数位dp一下即可，状态$h[pos][d][i][limit]$，状态数$O(10N^2)$ $k$表示当前位枚举的数字，转移式 h[pos][d][i]= \\begin{cases} h[pos+1][d][i]& k"}]